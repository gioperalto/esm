{
  "name": "waterline-blob",
  "version": "0.0.9",
  "description": "Generic helper logic for building a waterline/sails blob adapter",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/balderdashy/waterline-blob.git"
  },
  "keywords": [
    "blob",
    "waterline",
    "sails",
    "adapter",
    "custom"
  ],
  "author": {
    "name": "Mike McNeil"
  },
  "license": "MIT",
  "dependencies": {
    "mime": "~1.2.11",
    "lodash": "~2.2.0",
    "archiver": "~0.4.10"
  },
  "readme": "#waterline-blob\n\nFactory method which generates waterline adapter definitions from blob adapter definitions\n\n> This should eventually be dmerge into waterline core\n\n\n### Usage\n\n```javascript\n\n// Your blob adapter definition\n// (should have methods `read` and `write`)\nvar BlobAdapterDefinition = { /* ... */ };\n\n// **BAM**\nvar AdapterFactory = require('waterline-blob');\n\n// Your ready-to-go sails/waterline-compatible adapter definition\nvar AdapterDef = AdapterFactory( BlobAdapterDefinition );\n```\n\n\n\n### Writing Your Own Blob Adapter\n\nYou can export up to two methods from a BlobAdapter definition: `write()` and `read()`.\n\n\n```javascript\n /**\n\t * `Adapter.write( uploadStream, [options], [cb] )`\n\t *\n\t * Pipe initial FieldStreams (files) into a destination stream,\n\t * then set up events to automatically pipe the FieldStream of any newly detected file\n\t * from the UploadStream to the destination stream\n\t *\n\t * @param {Stream} `uploadStream`\t::\tcontains paused field streams \n\t *\t\t\t\t\t\t\t\t\t\tand fires when new ones are added\n\t * @param {Object} `options`\n\t *\t\t\tcontainer\t\t: {String} directory path where file(s) sould be stored\n\t *\t\t\tmaxBytes\t\t: {Integer} Maximum combined size of all files together (default 1GB)\n\t *\t\t\tmaxBytesPerFile\t: {Integer} Maximum file size for each individual file (default 25MB)\n\t */\n```\n\n```javascript\n/**\n * Usages:\n * \n * Adapter.read()\n * Adapter.read(destinationStream)\n * Adapter.read(cb)\n * Adapter.read({})\n * Adapter.read({}, cb)\n * Adapter.read({}, destinationStream)\n * Adapter.read({}, destinationStream, cb)\n */\n ```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/balderdashy/waterline-blob/issues"
  },
  "_id": "waterline-blob@0.0.9",
  "dist": {
    "shasum": "3fcf0255d2a8b3133387b9af50eace1f633ec336",
    "tarball": "http://registry.npmjs.org/waterline-blob/-/waterline-blob-0.0.9.tgz"
  },
  "_from": "waterline-blob@>=0.0.6-0 <0.1.0-0",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "balderdashy",
    "email": "mike@balderdash.co"
  },
  "maintainers": [
    {
      "name": "balderdashy",
      "email": "mike@balderdash.co"
    }
  ],
  "directories": {},
  "_shasum": "3fcf0255d2a8b3133387b9af50eace1f633ec336",
  "_resolved": "https://registry.npmjs.org/waterline-blob/-/waterline-blob-0.0.9.tgz",
  "homepage": "https://github.com/balderdashy/waterline-blob"
}
